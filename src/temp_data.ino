void temp_data() {
  // Эта функция обновляет временные переменные

  static unsigned long timer; // Статическая переменная для хранения времени

  // Проверка на переполнение таймера
  if (millis() < timer) {
    timer = millis(); // Обновляем таймер, если произошло переполнение
  }

  // Вызов функции get_temp для получения температуры и сглаживание результата
  // Используется скользящее среднее для сглаживания показаний температуры
  // water_temp = (9 * water_temp + get_temp(water_temp_pin)) / 10;
  exhaust_temp = (9 * exhaust_temp + get_temp(exhaust_temp_pin)) / 10;

  // Обновление данных каждую секунду
  if (millis() > timer + 1000) {
    timer = millis(); // Обновляем таймер

    // Обновление истории температуры выхлопа
    for (int i = 9; i >= 1; i--) {
      exhaust_temp_sec[i] = exhaust_temp_sec[i - 1]; // Сдвигаем значения массива, удаляя старое значение
    }
    exhaust_temp_sec[0] = exhaust_temp; // Добавляем новое значение температуры
  }
}
